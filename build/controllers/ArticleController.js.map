{"version":3,"sources":["../../src/controllers/ArticleController.js"],"names":["ArticleController","getArticles","req","res","error","result","articles","getArticle","id","params","article","commentArr","postId","response","comments","createArticle","title","share","body","userId","ownerId","firstName","lastName","user","imgUrl","files","image","secure_url","secureUrl","newArticle","coverImageUrl","authorName","Error","editArticle","articleId","existingArticle","deleteArticle","deleted","commentArticle","comment","newComment","articleTitle","console","log"],"mappings":"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","sourcesContent":["import { errorResponse, successResponse, successResponsArray } from '../utils';\nimport { uploadCloudinary } from '../services';\nimport { createItem, getItem, deleteItem, getItems, updateItem } from '../database/query/helper';\n\n/**\n * @class ArticleController\n * @description Controller to manage article CRUD\n * @exports ArticleController\n */\nexport default class ArticleController {\n\t/**\n  * @method getArticles\n  * @description - method to get all articles\n  * @param {object} req - request object\n  * @param {object} res - response object\n  * @return {object} request response body\n  */\n\tstatic async getArticles(req, res) {\n\t\ttry {\n\t\t\tconst { error, result: articles } = await getItems('articles');\n\t\t\tif (!error) {\n\t\t\t\treturn successResponsArray(res, 200, articles);\n\t\t\t}\n\t\t\treturn errorResponse(res, 500, 'Server error geting items');\n\t\t} catch (error) {\n\t\t\treturn errorResponse(res, 500, 'Server error');\n\t\t}\n\t}\n\n\t/**\n* @method getArticle\n* @description - method to get all articles\n* @param {object} req - request object\n* @param {object} res - response object\n* @return {object} request response body\n*/\n\tstatic async getArticle(req, res) {\n\t\ttry {\n\t\t\tconst { id } = req.params;\n\t\t\tconst { error, result: article } = await getItem('articles', { id });\n\t\t\tconst { result: commentArr } = await getItems('comments', { postId: id });\n\t\t\tif (!error) {\n\t\t\t\tconst response = { ...article, comments: commentArr };\n\t\t\t\treturn successResponse(res, 200, 'Articles', response);\n\t\t\t}\n\t\t\treturn errorResponse(res, 500, 'Server error geting items');\n\t\t} catch (error) {\n\t\t\treturn errorResponse(res, 500, 'Server error');\n\t\t}\n\t}\n\n\t/**\n  * @method createArticle\n  * @description - method for users to create article\n  * @param {object} req - request object\n  * @param {object} res - response object\n  * @return {object} request response body\n  */\n\tstatic async createArticle(req, res) {\n\t\tconst { title, article, share } = req.body;\n\t\tconst { userId: ownerId, firstName, lastName } = req.user;\n\n\t\tlet imgUrl;\n\t\tif (req.files && req.files.image) {\n\t\t\tconst { image } = req.files;\n\t\t\tconst { secure_url: secureUrl } = await uploadCloudinary(image);\n\t\t\timgUrl = secureUrl;\n\t\t}\n\t\ttry {\n\t\t\tconst { error, result: newArticle } = await createItem('articles', {\n\t\t\t\ttitle,\n\t\t\t\townerId,\n\t\t\t\tshare: share === 'false' ? share : true,\n\t\t\t\tcoverImageUrl: imgUrl || 'none',\n\t\t\t\tarticle,\n\t\t\t\tauthorName: `${firstName} ${lastName}`,\n\t\t\t});\n\t\t\tif (!error) {\n\t\t\t\treturn successResponse(res, 201, 'Article created successfuly', newArticle);\n\t\t\t}\n\t\t\tthrow new Error('Server error');\n\t\t} catch (error) {\n\t\t\treturn errorResponse(res, 500, 'Internal server error');\n\t\t}\n\t}\n\n\t/**\n * @method editArticle\n * @description - method for users to edit their article\n * @param {object} req - request object\n * @param {object} res - response object\n * @return {object} request response body\n */\n\tstatic async editArticle(req, res) {\n\t\tconst { title, article, share } = req.body;\n\t\tconst { id: articleId } = req.params;\n\t\tconst { userId: ownerId, firstName, lastName } = req.user;\n\t\ttry {\n\t\t\tconst { result: existingArticle } = await getItem('articles', { id: articleId });\n\t\t\tif (!existingArticle) return errorResponse(res, 404, 'Not found');\n\t\t\tif (existingArticle.ownerId !== ownerId) {\n\t\t\t\treturn errorResponse(res, 403, 'Request not allowed');\n\t\t\t}\n\t\t\tlet imgUrl;\n\t\t\tif (req.files && req.files.image) {\n\t\t\t\tconst { image } = req.files;\n\t\t\t\tconst { secure_url: secureUrl } = await uploadCloudinary(image);\n\t\t\t\timgUrl = secureUrl;\n\t\t\t}\n\t\t\tconst { error, result: newArticle } = await updateItem('articles', articleId, {\n\t\t\t\ttitle: title || existingArticle.title,\n\t\t\t\townerId,\n\t\t\t\tshare: share === 'false' ? share : true,\n\t\t\t\tcoverImageUrl: imgUrl || existingArticle.coverImageUrl,\n\t\t\t\tarticle: article || existingArticle.article,\n\t\t\t\tauthorName: `${firstName} ${lastName}`,\n\t\t\t});\n\t\t\tif (!error) {\n\t\t\t\treturn successResponse(res, 200, 'Article successfully updated', newArticle);\n\t\t\t}\n\t\t\treturn errorResponse(res, 500, 'Server error');\n\t\t} catch (error) {\n\t\t\treturn errorResponse(res, 500, 'Internal server error');\n\t\t}\n\t}\n\n\t/**\n  * @method deleteArticle\n  * @description - method for users to delete an existing article\n  * @param {object} req - request object\n  * @param {object} res - response object\n  * @return {object} request response body\n  */\n\tstatic async deleteArticle(req, res) {\n\t\t// remember to delete image associated with the article\n\t\ttry {\n\t\t\tconst { userId } = req.user;\n\t\t\tconst { id: articleId } = req.params;\n\t\t\tconst { result: article } = await getItem('articles', { id: articleId });\n\t\t\tif (!article) return errorResponse(res, 404, 'Article not found');\n\t\t\tif (article.ownerId !== userId) {\n\t\t\t\treturn errorResponse(res, 403, 'Not allowed');\n\t\t\t}\n\t\t\tconst { result: deleted } = await deleteItem('articles', articleId);\n\t\t\tif (deleted) return successResponse(res, 200, 'Article successfully deleted');\n\t\t\treturn errorResponse(res, 500, 'Server error deleting article');\n\t\t} catch (error) {\n\t\t\treturn errorResponse(res, 500, 'internal server error');\n\t\t}\n\t}\n\n\t/**\n  * @method commentArticle\n  * @description - method for users to comment on an article\n  * @param {object} req - request object\n  * @param {object} res - response object\n  * @return {object} request response body\n  */\n\tstatic async commentArticle(req, res) {\n\t\tconst { comment } = req.body;\n\t\tconst { id: articleId } = req.params;\n\t\tconst { userId: ownerId, firstName, lastName } = req.user;\n\t\ttry {\n\t\t\tconst { result: article } = await getItem('articles', { id: articleId });\n\t\t\tif (!article) {\n\t\t\t\treturn errorResponse(res, 404, 'No article found');\n\t\t\t}\n\t\t\tconst { error, result: newComment } = await createItem('comments', {\n\t\t\t\tcomment,\n\t\t\t\townerId,\n\t\t\t\tauthorName: `${firstName} ${lastName}`,\n\t\t\t\tpostId: articleId,\n\t\t\t});\n\t\t\tconst response = {\n\t\t\t\t...newComment,\n\t\t\t\tarticleTitle: article.title,\n\t\t\t\tarticle: article.article,\n\t\t\t};\n\t\t\tif (!error) {\n\t\t\t\treturn successResponse(res, 201, 'Comment successfully created”', response);\n\t\t\t}\n\t\t\tthrow new Error(error);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\treturn errorResponse(res, 500, 'internal server error');\n\t\t}\n\t}\n}\n"],"file":"ArticleController.js"}