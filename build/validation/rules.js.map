{"version":3,"sources":["../../src/validation/rules.js"],"names":["nameRegex","userRegister","matches","trim","withMessage","isLength","min","not","isEmpty","isIn","isString","isEmail","max","loginUser","createGif","optional","isBoolean","createArticle","comment"],"mappings":";;;;;;;AACA;;AADA;AAGA,MAAMA,SAAS,GAAG,sBAAlB;AAEO,MAAMC,YAAY,GAAG,CAC1B,4BAAK,WAAL,EACGC,OADH,CACWF,SADX,EAEGG,IAFH,GAGGC,WAHH,CAGe,8DAHf,CAD0B,EAK1B,4BAAK,UAAL,EAAiBF,OAAjB,CAAyBF,SAAzB,EAAoCG,IAApC,GAA2CC,WAA3C,CAAuD,6DAAvD,CAL0B,EAM1B,4BAAK,UAAL,EAAiB,0CAAjB,EAA6DC,QAA7D,CAAsE;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAtE,CAN0B,EAO1B,4BAAK,QAAL,EAAeC,GAAf,GAAqBC,OAArB,GAA+BL,IAA/B,GACGM,IADH,CACQ,CAAC,MAAD,EAAS,QAAT,CADR,EAEGL,WAFH,CAEe,+BAFf,CAP0B,EAU1B,4BAAK,SAAL,EAAgBG,GAAhB,GAAsBC,OAAtB,GACGE,QADH,GAEGN,WAFH,CAEe,mBAFf,EAGGD,IAHH,EAV0B,EAc1B,4BAAK,YAAL,EAAmBI,GAAnB,GAAyBC,OAAzB,GACGE,QADH,GAEGN,WAFH,CAEe,yBAFf,EAGGD,IAHH,EAd0B,EAkB1B,4BAAK,SAAL,EAAgBI,GAAhB,GAAsBC,OAAtB,GACGE,QADH,GAEGN,WAFH,CAEe,sBAFf,EAGGD,IAHH,EAlB0B,EAsB1B,4BAAK,OAAL,EAAc,8BAAd,EAA8CQ,OAA9C,GAAwDN,QAAxD,CAAiE;AAAEC,EAAAA,GAAG,EAAE,CAAP;AAAUM,EAAAA,GAAG,EAAE;AAAf,CAAjE,EAAuFT,IAAvF,EAtB0B,CAArB;;AAyBA,MAAMU,SAAS,GAAG,CACvB,4BAAK,OAAL,EAAcN,GAAd,GAAoBC,OAApB,GACGG,OADH,GAEGP,WAFH,CAEe,oBAFf,EAGGD,IAHH,EADuB,EAKvB,4BAAK,UAAL,EAAiBI,GAAjB,GAAuBC,OAAvB,GACGE,QADH,GAEGN,WAFH,CAEe,uBAFf,EAGGD,IAHH,EALuB,CAAlB;;AAWA,MAAMW,SAAS,GAAG,CACvB,4BAAK,OAAL,EAAcP,GAAd,GAAoBC,OAApB,GAA8BE,QAA9B,GACGN,WADH,CACe,yBADf,EAEGD,IAFH,EADuB,EAIvB,4BAAK,OAAL,EAAcY,QAAd,GAAyBC,SAAzB,GAAqCZ,WAArC,CAAiD,oDAAjD,CAJuB,CAAlB;;AAOA,MAAMa,aAAa,GAAG,CAC3B,4BAAK,OAAL,EAAcV,GAAd,GAAoBC,OAApB,GAA8BE,QAA9B,GACGN,WADH,CACe,6BADf,EAEGD,IAFH,EAD2B,EAI3B,4BAAK,SAAL,EAAgBI,GAAhB,GAAsBC,OAAtB,GAAgCE,QAAhC,GACGN,WADH,CACe,6BADf,EAEGD,IAFH,EAJ2B,EAO3B,4BAAK,OAAL,EAAcY,QAAd,GAAyBC,SAAzB,GAAqCZ,WAArC,CAAiD,oDAAjD,CAP2B,CAAtB;;AAWA,MAAMc,OAAO,GAAG,CACrB,4BAAK,SAAL,EAAgBX,GAAhB,GAAsBC,OAAtB,GAAgCE,QAAhC,GACGN,WADH,CACe,sBADf,EAEGD,IAFH,EADqB,CAAhB","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { body } from 'express-validator';\n\nconst nameRegex = /^[A-Za-z\\-']{2,250}$/;\n\nexport const userRegister = [\n  body('firstName')\n    .matches(nameRegex)\n    .trim()\n    .withMessage('firstName should be an alphabet between 2 and 250 characters'),\n  body('lastName').matches(nameRegex).trim().withMessage('lastName should be an alphabet between 2 and 250 characters'),\n  body('password', 'password should be at least 6 characters').isLength({ min: 6 }),\n  body('gender').not().isEmpty().trim()\n    .isIn(['male', 'female'])\n    .withMessage('please specify male or female'),\n  body('jobRole').not().isEmpty()\n    .isString()\n    .withMessage('Provide a jobRole')\n    .trim(),\n  body('department').not().isEmpty()\n    .isString()\n    .withMessage('Provide your department')\n    .trim(),\n  body('address').not().isEmpty()\n    .isString()\n    .withMessage('Provide your address')\n    .trim(),\n  body('email', 'Please provide a valid email').isEmail().isLength({ min: 3, max: 250 }).trim(),\n];\n\nexport const loginUser = [\n  body('email').not().isEmpty()\n    .isEmail()\n    .withMessage('Provide your email')\n    .trim(),\n  body('password').not().isEmpty()\n    .isString()\n    .withMessage('Provide your password')\n    .trim(),\n];\n\nexport const createGif = [\n  body('title').not().isEmpty().isString()\n    .withMessage('Provide a title for gif')\n    .trim(),\n  body('share').optional().isBoolean().withMessage('Share should be true or false else default to true')\n];\n\nexport const createArticle = [\n  body('title').not().isEmpty().isString()\n    .withMessage('Provide a title for article')\n    .trim(),\n  body('article').not().isEmpty().isString()\n    .withMessage('Provide a title for article')\n    .trim(),\n  body('share').optional().isBoolean().withMessage('Share should be true or false else default to true')\n];\n\n\nexport const comment = [\n  body('comment').not().isEmpty().isString()\n    .withMessage('Provide your comment')\n    .trim(),\n];\n"],"file":"rules.js"}