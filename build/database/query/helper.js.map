{"version":3,"sources":["../../../src/database/query/helper.js"],"names":["createItem","table","data","values","Object","keys","map","val","columns","query","text","toString","rows","dbInterface","error","result","message","updateItem","id","deleteItem","rowCount","getItem","option","value","key","getItems","condition"],"mappings":"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","sourcesContent":["import dbInterface from \"../index\";\nimport { getColumns, getFields } from \"../../utils/db_utils/queryUtil\";\n\n// Add item to a table\nexport const createItem = async (table, data) => {\n  const values = Object.values(data);\n  const keys = Object.keys(data).map(val => `\"${val}\"`);\n  const columns = getColumns(keys);\n  const query = {\n    text: `INSERT INTO ${table}(\n      ${keys.toString()}\n    ) VALUES(${columns}) RETURNING *`,\n    values\n  };\n  try {\n    const { rows } = await dbInterface.query(query);\n    return { error: null, result: rows[0] };\n  } catch (error) {\n    return { error: error.message, result: null };\n  }\n};\n\n// UPDATE table_name\n// SET column1 = value1, column2 = value2...., columnN = valueN\n// WHERE[condition];\n\n// Update a single item\nexport const updateItem = async (table, id, data) => {\n  const values = Object.values(data);\n  const keys = Object.keys(data).map(val => `\"${val}\"`);\n  const columns = getColumns(keys);\n  const query = {\n    text: `UPDATE ${table} SET (${keys.toString()}) = (${columns}) WHERE id='${id}' RETURNING *`,\n    values\n  };\n  try {\n    const { rows } = await dbInterface.query(query);\n    return { error: null, result: rows[0] };\n  } catch (error) {\n    return { error: error.message };\n  }\n};\n\n// Delete an item\nexport const deleteItem = async (table, id) => {\n  const query = {\n    text: `DELETE FROM ${table} WHERE id=$1 `,\n    values: [id]\n  };\n  try {\n    const { rowCount } = await dbInterface.query(query);\n    return { error: null, result: rowCount };\n  } catch (error) {\n    return { error: error.message };\n  }\n};\n\n// Get a single item from db, expect a single key value pair option\nexport const getItem = async (table, option) => {\n  const value = Object.values(option);\n  const key = Object.keys(option)[0];\n  const query = {\n    text: `SELECT * FROM ${table} WHERE ${key}=$1`,\n    values: value\n  };\n  try {\n    const { rows } = await dbInterface.query(query);\n    return { error: null, result: rows[0] };\n    //return { error: null, result: formater(table, rows) };\n  } catch (error) {\n    return { error: error.message };\n  }\n};\n\n// Get items froom the database\nexport const getItems = async (table, condition = null) => {\n  const value = condition ? Object.values(condition) : null;\n  const key = condition ? Object.keys(condition).toString() : null;\n  const query = !condition\n    ? { text: `SELECT * FROM ${table}` }\n    : {\n        text: `SELECT * FROM ${table} WHERE \"${key}\"=$1 `,\n        values: value\n      };\n  try {\n    const { rows } = await dbInterface.query(query);\n    return { error: null, result: rows };\n  } catch (error) {\n    return { error: error.message };\n  }\n};\n"],"file":"helper.js"}