{"version":3,"sources":["../../../src/utils/db_utils/queryUtil.js"],"names":["getColumns","data","colums","forEach","_","index","length","error","message"],"mappings":";;;;;;;AAAA;AACO,MAAMA,UAAU,GAAIC,IAAD,IAAU;AAClC,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAI;AACFD,IAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACzB,UAAIA,KAAK,IAAIJ,IAAI,CAACK,MAAL,GAAc,CAA3B,EAA8B;AAC5BJ,QAAAA,MAAM,IAAK,KAAIG,KAAK,GAAG,CAAE,EAAzB;AACD,OAFD,MAEO;AACLH,QAAAA,MAAM,IAAK,KAAIG,KAAK,GAAG,CAAE,GAAzB;AACD;AACF,KAND;AAOD,GARD,CAQE,OAAOE,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;;AACD,SAAON,MAAP;AACD,CAdM,C,CAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport const getColumns = (data) => {\n  let colums = '';\n  try {\n    data.forEach((_, index) => {\n      if (index >= data.length - 1) {\n        colums += ` $${index + 1}`;\n      } else {\n        colums += ` $${index + 1},`;\n      }\n    });\n  } catch (error) {\n    return error.message;\n  }\n  return colums;\n};\n\n\n// export const getFields = (payload) => {\n//   const values = Object.values(payload);\n//   const keys = Object.keys(payload);\n//   let disp = '';\n//   keys.forEach((key, index) => {\n//     disp = `${disp}${key} = \"${values[index]}\",`;\n//   });\n//   return disp;\n// };\n"],"file":"queryUtil.js"}