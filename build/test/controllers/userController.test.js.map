{"version":3,"sources":["../../../src/test/controllers/userController.test.js"],"names":["chai","use","chaiHttp","sinonChai","expect","signinRoute","userRoute","getUsersRouter","rootUserRoute","registerUser","UserController","describe","dummyUser","firstName","faker","name","lastName","email","internet","password","gender","jobRole","department","address","streetAddress","adminToken","it","done","testUser","request","server","post","send","end","err","res","Error","route","to","have","status","body","property","errors","noneAdmin","token","data","tokenBearer","set","error","eq","admin","get","rootAdmin","secret","userRole","req","json","sinon","stub","returnsThis","been","calledWith"],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport faker from 'faker';\nimport sinon from 'sinon';\nimport sinonChai from 'sinon-chai';\nimport server from '../../server';\nimport { UserController } from '../../controllers';\n\nchai.use(chaiHttp);\nchai.use(sinonChai);\nconst { expect } = chai;\n\nconst signinRoute = '/api/v1/auth/signin';\nconst userRoute = '/api/v1/auth/create-user';\nconst getUsersRouter = '/api/v1/auth/users';\nconst rootUserRoute = '/api/v1/auth/create-user-root';\n\nconst { registerUser } = UserController;\n\ndescribe('Users test suite', () => {\n  const dummyUser = {\n    firstName: faker.name.firstName(),\n    lastName: faker.name.lastName(),\n    email: faker.internet.email(),\n    password: faker.internet.password(),\n    gender: 'female',\n    jobRole: 'support assist',\n    department: 'support',\n    address: faker.address.streetAddress(),\n  };\n  describe('Creating User', () => {\n    let adminToken;\n    it('It should error for invalid request data', (done) => {\n      const testUser = {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        email: 'invalidMail',\n        password: faker.internet.password(),\n      };\n      chai.request(server).post(userRoute).send(testUser).end((err, res) => {\n        if (err) throw Error(`Error making test request ${route}`);\n        expect(res).to.have.status(422);\n        expect(res.body).to.have.property('errors');\n        expect(res.body.errors).to.have.property('email');\n        done();\n      });\n    });\n    it('Should authenticate request', (done) => {\n      chai.request(server).post(userRoute).send(dummyUser).end((err, res) => {\n        if (err) throw Error(`Error making test request ${route}`);\n        expect(res).to.have.status(401);\n        expect(res.body).to.have.property('error');\n        done();\n      });\n    });\n    it('Should not allow none admin user', (done) => {\n      const noneAdmin = {\n        email: 'oliver4@gmail.com',\n        password: 'password',\n      };\n      chai.request(server).post(signinRoute).send(noneAdmin).end((err, res) => {\n        const { token } = res.body.data;\n        const tokenBearer = `Bearer ${token}`;\n        chai.request(server).post(userRoute).set('Authorization', tokenBearer).send(dummyUser)\n          .end((err, res) => {\n            expect(res).to.have.status(401);\n            expect(res.body.error).to.eq('Access denied, only admins');\n            done();\n          });\n      });\n    });\n    it('Should allow admin user to create user', (done) => {\n      const admin = {\n        email: 'admin@gmail.com',\n        password: 'devcAdmin',\n      };\n      chai.request(server).post(signinRoute).send(admin).end((err, res) => {\n        const { token } = res.body.data;\n        adminToken = `Bearer ${token}`;\n        chai.request(server).post(userRoute).set('Authorization', adminToken).send(dummyUser)\n          .end((err, res) => {\n            expect(res).to.have.status(201);\n            expect(res.body).to.have.property('data');\n            done();\n          });\n      });\n    });\n    it('Should allow admin get all users', (done) => {\n      chai.request(server).get(getUsersRouter).set('Authorization', adminToken).end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('data');\n        done();\n      });\n    });\n    it('Should create rootAdmin with valid secret', (done) => {\n      const rootAdmin = {\n        ...dummyUser,\n        secret: 'root-man',\n        email: faker.internet.email(),\n        userRole: 'admin',\n      };\n      chai.request(server).post(rootUserRoute).send(rootAdmin).end((err, res) => {\n        expect(res).to.have.status(201);\n        expect(res.body.data.userRole).to.eq('admin');\n        done();\n      });\n    });\n    it('Should prevent creating rootAdim with invalid secret', (done) => {\n      const rootAdmin = {\n        ...dummyUser,\n        secret: 'unknow secret',\n        userRole: 'admin',\n      };\n      chai.request(server).post(rootUserRoute).send(rootAdmin).end((err, res) => {\n        expect(res).to.have.status(403);\n        done();\n      });\n    });\n  });\n  describe('registerUser controller test', () => {\n    it('Should handle error exception', async () => {\n      const req = {\n        body: {},\n      };\n      const res = { status: () => {}, json: () => {} };\n      sinon.stub(res, 'status').returnsThis();\n      await registerUser(req, res);\n      expect(true).to.eq(true);\n      expect(res.status).to.have.been.calledWith(500);\n    });\n  });\n});\n"],"file":"userController.test.js"}