{"version":3,"sources":["../src/server.js"],"names":["app","use","process","env","NODE_ENV","express","urlencoded","extended","json","get","req","res","status","message","swaggerUi","serve","setup","apiDocs","logger","apiRoutes","PORT","listen","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,GAAG,GAAG,uBAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,oBAAR,E,CAEA;AACA;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EAAqC;AACnC;AACD;;AACDJ,GAAG,CAACC,GAAJ,CAAQ,iCAAR,E,CACA;;AACAD,GAAG,CAACC,GAAJ,CAAQI,iBAAQC,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACC,GAAJ,CAAQI,iBAAQG,IAAR,EAAR;AAEAR,GAAG,CAACS,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AAAEK,IAAAA,OAAO,EAAE;AAAX,GAArB;AACD,CAFD;AAGAb,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBa,0BAAUC,KAAlC,EAAyCD,0BAAUE,KAAV,CAAgBC,aAAhB,CAAzC;AACAjB,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBiB,eAAnB,EAA2BC,eAA3B;AAEA,MAAMC,IAAI,GAAGlB,OAAO,CAACC,GAAR,CAAYiB,IAAZ,IAAoB,IAAjC;AAEApB,GAAG,CAACqB,MAAJ,CAAWD,IAAX,EAAiB,MAAM;AACrBE,EAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBH,IAAK,EAA3C;AACD,CAFD;eAIepB,G","sourcesContent":["import express from \"express\";\nimport \"dotenv/config\";\nimport expressFileUpload from \"express-fileupload\";\nimport cors from \"cors\";\nimport swaggerUi from \"swagger-ui-express\";\nimport apiDocs from \"../docs\";\nimport initializeDb from \"./database/initDb\";\nimport apiRoutes from \"./routes\";\nimport logger from \"./middlewares/Logger\";\n\nconst app = express();\napp.use(cors());\n\n// Initialize db, create tables if not present\n// do this if current environment is not test\nif (process.env.NODE_ENV !== \"test\") {\n  initializeDb();\n}\napp.use(expressFileUpload());\n// setup express body-perser for json data\napp.use(express.urlencoded({ extended: false }));\napp.use(express.json());\n\napp.get(\"/\", (req, res) => {\n  res.status(200).json({ message: \"This is the teamwork Backend API, enjoy\" });\n});\napp.use(\"/api/v1/docs\", swaggerUi.serve, swaggerUi.setup(apiDocs));\napp.use(\"/api/v1\", logger, apiRoutes);\n\nconst PORT = process.env.PORT || 3000;\n\napp.listen(PORT, () => {\n  console.log(`server running on port ${PORT}`);\n});\n\nexport default app;\n"],"file":"server.js"}